{"name":"Etu\\Core\\UserBundle\\Command\\Util\\ProgressBar","line":8,"short_desc":"Display a progress bar in the console.","long_desc":"","hint":null,"tags":[],"namespace":"Etu\\Core\\UserBundle\\Command\\Util","file":"C:\\wamp\\www\\site-etu\\doc\\api\/..\/..\/src\/Etu\/Core\\UserBundle\\Command\\Util\\ProgressBar.php","hash":"0e7c543b33be2083641f0d8aa31941ed9b8b4fa4","parent":null,"modifiers":0,"is_interface":false,"aliases":[],"interfaces":[],"properties":[],"methods":{"__construct":{"name":"__construct","line":59,"short_desc":"Constructor, sets format and size See the reset() method for documentation.","long_desc":"","hint":null,"hint_desc":null,"tags":{"see":[["reset"]]},"modifiers":"1","is_by_ref":"","exceptions":[],"parameters":{"formatstring":{"name":"formatstring","line":59,"short_desc":"The format string","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"","default":null,"is_by_ref":false},"bar":{"name":"bar","line":59,"short_desc":"The string filling the progress bar","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"","default":null,"is_by_ref":false},"prefill":{"name":"prefill","line":59,"short_desc":"The string filling empty space in the bar","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"","default":null,"is_by_ref":false},"width":{"name":"width","line":59,"short_desc":"The width of the display","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"","default":null,"is_by_ref":false},"target_num":{"name":"target_num","line":59,"short_desc":"The target number for the bar","long_desc":null,"hint":[["Etu\\Core\\UserBundle\\Command\\Util\\float",false]],"tags":[],"modifiers":"","default":null,"is_by_ref":false},"options":{"name":"options","line":59,"short_desc":"Options for the progress bar","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"","default":"array()","is_by_ref":false}}},"reset":{"name":"reset","line":142,"short_desc":"Re-sets format and size.","long_desc":"<pre>\n The reset method expects 5 to 6 arguments:\n - The first argument is the format string used to display the progress\n   bar. It may (and should) contain placeholders that the class will\n   replace with information like the progress bar itself, the progress in\n   percent, and so on. Current placeholders are:\n     %bar%         The progress bar\n     %current%     The current value\n     %max%         The maximum malue (the \"target\" value)\n     %fraction%    The same as %current%\/%max%\n     %percent%     The status in percent\n     %elapsed%     The elapsed time\n     %estimate%    An estimate of how long the progress will take\n   More placeholders will follow. A format string like:\n   \"* stuff.tar %fraction% KB [%bar%] %percent%\"\n   will lead to a bar looking like this:\n   \"* stuff.tar 391\/900 KB [=====>---------]  43.44%\"\n - The second argument is the string that is going to fill the progress\n   bar. In the above example, the string \"=>\" was used. If the string you\n   pass is too short (like \"=>\" in this example), the leftmost character\n   is used to pad it to the needed size. If the string you pass is too long,\n   excessive characters are stripped from the left.\n - The third argument is the string that fills the \"empty\" space in the\n   progress bar. In the above example, that would be \"-\". If the string\n   you pass is too short (like \"-\" in this example), the rightmost\n   character is used to pad it to the needed size. If the string you pass\n   is too short, excessive characters are stripped from the right.\n - The fourth argument specifies the width of the display. If the options\n   are left untouched, it will tell how many characters the display should\n   use in total. If the \"absolute_width\" option is set to false, it tells\n   how many characters the actual bar (that replaces the %bar%\n   placeholder) should use.\n - The fifth argument is the target number of the progress bar. For\n   example, if you wanted to display a progress bar for a download of a\n   file that is 115 KB big, you would pass 115 here.\n - The sixth argument optional. If passed, it should contain an array of\n   options. For example, passing array('absolute_width' => false) would\n   set the absolute_width option to false. Current options are:\n     option             | def.  |  meaning\n     --------------------------------------------------------------------\n     percent_precision  | 2     |  Number of decimal places to show when\n                        |       |  displaying the percentage.\n     fraction_precision | 0     |  Number of decimal places to show when\n                        |       |  displaying the current or target\n                        |       |  number.\n     percent_pad        | ' '   |  Character to use when padding the\n                        |       |  percentage to a fixed size. Senseful\n                        |       |  values are ' ' and '0', but any are\n                        |       |  possible.\n     fraction_pad       | ' '   |  Character to use when padding max and\n                        |       |  current number to a fixed size.\n                        |       |  Senseful values are ' ' and '0', but\n                        |       |  any are possible.\n     width_absolute     | true  |  If the width passed as an argument\n                        |       |  should mean the total size (true) or\n                        |       |  the width of the bar alone.\n     ansi_terminal      | false |  If this option is true, a better\n                        |       |  (faster) method for erasing the bar is\n                        |       |  used. CAUTION - this is known to cause\n                        |       |  problems with some terminal emulators,\n                        |       |  for example Eterm.\n     ansi_clear         | false |  If the bar should be cleared everytime\n     num_datapoints     | 5     |  How many datapoints to use to create\n                        |       |  the estimated remaining time\n     min_draw_interval  | 0.0   |  If the last call to update() was less\n                        |       |  than this amount of seconds ago,\n                        |       |  don't update.\n <\/pre>","hint":[["bool",false]],"hint_desc":"","tags":[],"modifiers":"1","is_by_ref":"","exceptions":[],"parameters":{"formatstring":{"name":"formatstring","line":142,"short_desc":"The format string","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"","default":null,"is_by_ref":false},"bar":{"name":"bar","line":142,"short_desc":"The string filling the progress bar","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"","default":null,"is_by_ref":false},"prefill":{"name":"prefill","line":142,"short_desc":"The string filling empty space in the bar","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"","default":null,"is_by_ref":false},"width":{"name":"width","line":142,"short_desc":"The width of the display","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"","default":null,"is_by_ref":false},"target_num":{"name":"target_num","line":142,"short_desc":"The target number for the bar","long_desc":null,"hint":[["Etu\\Core\\UserBundle\\Command\\Util\\float",false]],"tags":[],"modifiers":"","default":null,"is_by_ref":false},"options":{"name":"options","line":142,"short_desc":"Options for the progress bar","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"","default":"array()","is_by_ref":false}}},"update":{"name":"update","line":214,"short_desc":"Updates the bar with new progress information","long_desc":"","hint":[["bool",false]],"hint_desc":"","tags":[],"modifiers":"1","is_by_ref":"","exceptions":[],"parameters":{"current":{"name":"current","line":214,"short_desc":"current position of the progress counter","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"","default":null,"is_by_ref":false}}},"display":{"name":"display","line":271,"short_desc":"Prints the bar.","long_desc":"Usually, you don't need this method, just use update()\n which handles erasing the previously printed bar also. If you use a\n custom function (for whatever reason) to erase the bar, use this method.","hint":[["bool",false]],"hint_desc":"","tags":[],"modifiers":"1","is_by_ref":"","exceptions":[],"parameters":{"current":{"name":"current","line":271,"short_desc":"current position of the progress counter","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"","default":null,"is_by_ref":false}}},"erase":{"name":"erase","line":339,"short_desc":"Erases a previously printed bar.","long_desc":"","hint":[["bool",false]],"hint_desc":"","tags":[],"modifiers":"1","is_by_ref":"","exceptions":[],"parameters":{"clear":{"name":"clear","line":339,"short_desc":"if the bar should be cleared in addition to resetting the cursor position","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"","default":"false","is_by_ref":false}}}},"constants":[]}