{% extends '::developpers.html.twig' %}

{% block content %}
    <div class="padding20-all">
        <ul class="breadcrumb">
            <li><a href="{{ path('doc_index') }}">Documentation Développeurs</a> <span class="divider">/</span></li>
            <li class="active">Librairies <span class="divider">/</span></li>
            <li class="active">PHPUTT</li>
        </ul>

        {% if app.request.locale != 'fr' %}
            <div class="alert alert-warning">
                The EtuUTT developpers documentation is not available in your language.
                For the moment, it exists only in French.
            </div>
        {% endif %}

        <a href="https://github.com/ungdev/phputt" class="btn pull-right">
            <i class="fa fa-github"></i>
            Voir sur Github
        </a>

        <h3>PHP-UTT</h3>

        <hr />

        <p>
            PHP UTT est un set de composants écrits en PHP (PHP 5.3+)
            facilitant l'utilisation de ressources mises à disposition des étudiants
            par l'UTT pour le développement de sites internet. Pour le moment, il existe
            seulement deux composants : CAS et LDAP.
        </p>

        <hr />

        <h4>Installation</h4>

        <br />

        <p>
            L'installation se fait via Composer, un gestionnaire de paquets pour PHP.
            Vous devez donc installer PHP (si vous ne l'avez pas).
        </p>

        <br />

        <h5>Debian & Ubuntu</h5>

        <pre>curl -sS https://getcomposer.org/installer | php</pre>

        <p>
            Cette commande va créer un fichier <code>composer.phar</code>, utilisable avec <code>php composer.phar</code>.
        </p>

        <br />

        <h5>Windows</h5>

        <p>
            Téléchargez l'installateur Windows sur <a href="https://getcomposer.org/download/">https://getcomposer.org/download</a>.
            Utilisez Composer avec <code>composer</code>.
        </p>

        <br />

        <h5>PHPUTT</h5>

        <p>
            Une fois PHP et Composer installés, créez un fichier <code>composer.json</code> avec le contenu suivant :
        </p>

        <pre>{
    "require": {
        "ungdev/phputt": "dev-master"
    },
    "minimum-stability": "dev"
}</pre>

        <p>
            Cela indique à Composer que vous avez besoin de phputt pour votre projet.
        </p>

        <p>
            Lancez ensuite en ligne de commande :
        </p>

        <ul>
            <li><code>php composer.phar update</code> pour Debian / Ubuntu</li>
            <li><code>composer update</code> pour Windows</li>
        </ul>

        <p>
            Composer installera alors dans un dossier <code>vendor</code> à la fois phputt et phpCAS, necéssaire à phputt.
        </p>

        <p>
            Une fois l'installation terminée, vous pouvez utiliser la librairie en incluant <code>vendor/autoload.php</code> :
        </p>

        <pre>require 'vendor/autoload.php';</pre>

        <hr />

        <h4>Utilisation</h4>

        <br />

        <h5>CAS - Connexion utilisateur</h5>

        <p>
            La connexion utilisateur permet d'utiliser l'interface CAS officielle de l'UTT.
        </p>

        <p class="alert alert-info">
            <strong>Remarque :</strong> vous devez utiliser un nom de domaine approuvé par le CRI pour utiliser le CAS.<br />
            Tous les noms de domaines en *.utt.fr sont par défaut approuvés.
        </p>

        <br />

        <p>
            <em>Connexion</em>
        </p>

        <p>
            Pour connecter l'utilisateur grâce à CAS, il vous faut utiliser le <code>SecurityLayer</code>, une classe gérant
            l'appel à CAS. Pour cela, lorsque vous souhaitez que l'utilisateur se connecte :
        </p>

        <pre>require 'vendor/autoload.php';

$security = new PhpUtt\Cas\SecurityLayer();

// Retourne le login utilisateur. Redirige vers l'interface CAS si l'utilisateur n'est pas connecté.
$userLogin = $security-&gt;login();</pre>

        <p>
            Il vous incombe tout de même de stocker ce login en session de votre coté, CAS ne le fera pas pour vous.
        </p>

        <br />

        <p>
            <em>Déconnexion</em>
        </p>

        <p>
            De la même manière, lorsque vous souaitez déconnectez l'utilisateur de CAS,
            vous devez utiliser le <code>SecurityLayer</code> :
        </p>

        <pre>require 'vendor/autoload.php';

$security = new PhpUtt\Cas\SecurityLayer();

$security-&gt;logout();</pre>

        <p>
            Déconnectez l'utilisateur de CAS ne supprime pas les sessions de votre coté, à vous de le faire.
        </p>

        <br />

        <h5>LDAP - Récupération d'informations utilisateurs</h5>

        <p>
            Un annuaire LDAP des étudiants est mis à disposition par l'UTT. Cette librairie permet
            d'utiliser le LDAP pour récupérer les informations utilisateurs.
        </p>

        <p class="alert alert-info">
            <strong>Remarque :</strong> le LDAP n'est accessible que depuis l'intérieur du réseau de l'UTT (Wifi ou SIA).
        </p>

        <p>
            Les méthodes disponibles sont :
        </p>

        <pre>require 'vendor/autoload.php';

$ldap = new PhpUtt\Ldap\LdapLayer();

// Retourne un objet décrivant l'utilisateur
$user = $ldap-&gt;getUser($login);

// Retourne un objet décrivant l'association
$orga = $ldap-&gt;getOrga($login);

// Retourne un tableau de tous les utilisateurs
$users = $ldap-&gt;getUsers();

// Retourne un tableau de tous les étudiants (personnel de l'UTT retiré)
$students = $ldap-&gt;getStudents();

// Retourne un tableau de toutes les associations
$users = $ldap-&gt;getOrgas($login);</pre>
    </div>
{% endblock %}